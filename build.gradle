buildscript {
    repositories {
        mavenLocal()
        maven { url = 'https://files.minecraftforge.net/maven' }
        maven { url = "https://plugins.gradle.org/m2/" }
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
        classpath "com.wynprice.cursemaven:CurseMaven:2.1.1"
        classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.7-SNAPSHOT'
    }
}

plugins {
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '[6.0,6.2)'
}

apply plugin: 'org.spongepowered.mixin'

version = mod_version
group = mod_group_id
base {
    archivesName = mod_id
}

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {
    mappings channel: mapping_channel, version: mapping_version
    copyIdeResources = true

    runs {
        // applies to all the run configs below
        configureEach {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            // The markers can be added/remove as needed separated by commas.
            // "SCAN": For mods scan.
            // "REGISTRIES": For firing of registry events.
            // "REGISTRYDUMP": For getting the contents of all registries.
            property 'forge.logging.markers', 'REGISTRIES'

            // Recommended logging level for the console
            // You can set various levels here.
            // Please read: https://stackoverflow.com/questions/2031163/when-to-use-the-different-log-levels
            property 'forge.logging.console.level', 'debug'

            mods {
                "${mod_id}" {
                    source sourceSets.main
                }
            }
        }

        client {
            // Comma-separated list of namespaces to load gametests from. Empty = all namespaces.
            property 'forge.enabledGameTestNamespaces', mod_id
        }

        server {
            property 'forge.enabledGameTestNamespaces', mod_id
            args '--nogui'
        }

        // This run config launches GameTestServer and runs all registered gametests, then exits.
        // By default, the server will crash when no gametests are provided.
        // The gametest system is also enabled by default for other run configs under the /test command.
        gameTestServer {
            property 'forge.enabledGameTestNamespaces', mod_id
        }

        data {
            // example of overriding the workingDirectory set in configureEach above
            workingDirectory project.file('run-data')

            // Specify the modid for data generation, where to output the resulting resource, and where to look for existing resources.
            args '--mod', mod_id, '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }
repositories {
    maven {
        name = "cursemaven"
        url = "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
    mavenCentral()
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"

    //Tetra (requires mutil)
    implementation fg.deobf("curse.maven:tetra-289712:4857842")
    implementation fg.deobf("curse.maven:scroll-of-harvests-571339:4706191")

    //PREVIOUSLY SUPPORTED
    //BOP (requires terrablender)
    implementation fg.deobf("curse.maven:biomes-o-plenty-220318:4617259")

    //Enderite (requires architectury api and cloth config)
    implementation fg.deobf("curse.maven:enderite-mod-for-forge-401284:4630504")

    //Ice and Fire (requires Citadel)
    implementation fg.deobf("curse.maven:ice-and-fire-dragons-264231:5037783")

    //Outer End (Requires Blueprint)
    implementation fg.deobf("curse.maven:the-outer-end-430404:5043937")

    //Stalwart Dungeons
    implementation fg.deobf("curse.maven:stalwart-dungeons-474817:4703671")

    //Twilight Forest
    implementation fg.deobf("curse.maven:the-twilight-forest-227639:4865711")

    //Create
    implementation fg.deobf("curse.maven:create-328085:4835191")


    //SET ONE
//    //Aether
//    implementation fg.deobf("curse.maven:aether-255308:4926220")
//
//    //Deep Aether (requires Aether, geckolib, terrablender, and aeroblender)
//    implementation fg.deobf("curse.maven:deep-aether-852465:4861346")

    //Alex's Caves (requires citadel)
    implementation fg.deobf("curse.maven:alexs-caves-924854:4852042")

    //Blue Skies (requires structure gel)
    implementation fg.deobf("curse.maven:blue-skies-312918:4765673")

    //Deeper and Darker
    implementation fg.deobf("curse.maven:deeperdarker-659011:4807511")

    //Mo' Shiz
    implementation fg.deobf("curse.maven:mo-shiz-mod-62536:4838746")

    //Ores Above Diamond
    implementation fg.deobf("curse.maven:ores-above-diamonds-351339:4682592")

    //Regions Unexplored
    implementation fg.deobf("curse.maven:regions-unexplored-659110:4779426")


    //SET 2
    //Endless Biomes
    implementation fg.deobf("curse.maven:endless-biomes-667688:4715137")

    //Enlightend
    implementation fg.deobf("curse.maven:enlightend-502786:4880586")

    //Galosphere
    implementation fg.deobf("curse.maven:galosphere-631098:4671779")

    //Voidscape
    implementation fg.deobf("curse.maven:voidscape-251730:4874360")

    //Organics
    implementation fg.deobf("curse.maven:organics-411399:4703550")


    //SET 3
    //End's Phantasm (requires sinytra connector and forgified fabric api)
    implementation fg.deobf("curse.maven:phantasm-565254:4828693")

//    //Eldritch End (requires necronomicon and azurelib)
//    implementation fg.deobf("curse.maven:eldritch-end-877553:4932435")

    //Deep Dark Regrowth (requires geckolib)
    implementation fg.deobf("curse.maven:deep-dark-regrowth-827619:4941721")

    //Silent's Gems (requires silent-lib)
    implementation fg.deobf("curse.maven:silents-gems-220311:4606142")
    //Silent Gear
    implementation fg.deobf("curse.maven:silent-gear-297039:4868212")

    //Nature Arise (requires terrablender)
    implementation fg.deobf("curse.maven:nature-arise-639540:4715089")

    //Ad Astra (requires resourceful-lib, resourceful-config, and botarium)
    implementation fg.deobf("curse.maven:ad-astra-635042:4894852")

    //Aquamirae (requires obscure api)
    implementation fg.deobf("curse.maven:ob-aquamirae-536254:4616373")


    //SET 4
    //L2 Complements (Requires L2 Library)
    implementation fg.deobf("curse.maven:l2-complements-758349:4905064")

    //Epic Samurai (Requires AzureLib)
    implementation fg.deobf("curse.maven:epic-samurais-848381:4924677")

//    //Liroth Revamped (Requires GeckoLib and Cloth Config)
//    implementation fg.deobf("curse.maven:liroth-revamped-forge-682860:4778705")

    //Ecologics
    implementation fg.deobf("curse.maven:ecologics-570463:4857272")


    //JEI
    implementation fg.deobf("curse.maven:jei-238222:4712868")
//    implementation fg.deobf("curse.maven:configured-457570:NOTREADYYET")
//    implementation fg.deobf("curse.maven:just-enough-resources-jer-240630:NOTREADYYET")

    //Optimization
//    implementation fg.deobf("curse.maven:rubidium-574856:4767529")
//    implementation fg.deobf("curse.maven:oculus-581495:4767500")

    //Libraries and Dependencies
    implementation fg.deobf("curse.maven:mutil-351914:4824501")
    implementation fg.deobf("curse.maven:blueprint-382216:4594238")
    implementation fg.deobf("curse.maven:terrablender-563928:4647094")
    implementation fg.deobf("curse.maven:architectury-api-419699:4663010")
    implementation fg.deobf("curse.maven:cloth-config-348521:4633444")
    implementation fg.deobf("curse.maven:citadel-331936:4848887")
    implementation fg.deobf("curse.maven:structure-gel-api-378802:4900814")
    implementation fg.deobf("curse.maven:sinytra-connector-890127:4932457")
    implementation fg.deobf("curse.maven:forgified-fabric-api-889079:4917788")
    implementation fg.deobf("curse.maven:necronomicon-586157:4857971")
    implementation fg.deobf("curse.maven:azurelib-817423:4931005")
    implementation fg.deobf("curse.maven:geckolib-388172:4933987")
    implementation fg.deobf("curse.maven:silent-lib-242998:4585754")
    implementation fg.deobf("curse.maven:resourceful-lib-570073:4927082")
    implementation fg.deobf("curse.maven:resourceful-config-714059:4683093")
    implementation fg.deobf("curse.maven:botarium-704113:4831434")
    implementation fg.deobf("curse.maven:obscure-api-638417:4616364")
//    implementation fg.deobf("curse.maven:aeroblender-879879:4789008")
    implementation fg.deobf("curse.maven:patchouli-306770:4892162")
    implementation fg.deobf("curse.maven:l2library-620203:4846530")


    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'

}

// This block of code expands all declared replace properties in the specified resource targets.
// A missing property will result in an error. Properties are expanded using ${} Groovy notation.
// When "copyIdeResources" is enabled, this will also run before the game launches in IDE environments.
// See https://docs.gradle.org/current/dsl/org.gradle.language.jvm.tasks.ProcessResources.html
tasks.named('processResources', ProcessResources).configure {
    var replaceProperties = [
            minecraft_version: minecraft_version, minecraft_version_range: minecraft_version_range,
            forge_version: forge_version, forge_version_range: forge_version_range,
            loader_version_range: loader_version_range,
            mod_id: mod_id, mod_name: mod_name, mod_license: mod_license, mod_version: mod_version,
            mod_authors: mod_authors, mod_description: mod_description,
    ]
    inputs.properties replaceProperties

    filesMatching(['META-INF/mods.toml', 'pack.mcmeta']) {
        expand replaceProperties + [project: project]
    }
}


// Example for how to get properties into the manifest for reading at runtime.
tasks.named('jar', Jar).configure {
    manifest {
        attributes([
                'Specification-Title'     : mod_id,
                'Specification-Vendor'    : mod_authors,
                'Specification-Version'   : '1', // We are version 1 of ourselves
                'Implementation-Title'    : project.name,
                'Implementation-Version'  : project.jar.archiveVersion,
                'Implementation-Vendor'   : mod_authors,
                'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }

    // This is the preferred method to reobfuscate your jar file
    finalizedBy 'reobfJar'
}

// Example configuration to allow publishing using the maven-publish plugin
publishing {
    publications {
        register('mavenJava', MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}